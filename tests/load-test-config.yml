config:
  target: 'http://localhost:8123'
  phases:
    - duration: 60
      arrivalRate: 5
      name: "Warm up"
    - duration: 120
      arrivalRate: 10
      rampTo: 25
      name: "Ramp up load"
    - duration: 300
      arrivalRate: 25
      name: "Sustained load"
    - duration: 60
      arrivalRate: 25
      rampTo: 5
      name: "Ramp down"
  processor: "./tests/load-test-processor.js"
  
scenarios:
  - name: "Opportunity Analysis Load Test"
    weight: 80
    flow:
      - post:
          url: "/api/analyze"
          headers:
            Content-Type: "application/json"
          json:
            customerName: "Load Test Customer {{ $randomString() }}"
            region: "{{ $pick(['us-east-1', 'us-west-2', 'eu-west-1']) }}"
            closeDate: "{{ $randomDate('2024-01-01', '2024-12-31') }}"
            opportunityName: "Load Test Opportunity {{ $randomString() }}"
            description: "{{ $randomText(100, 500) }}"
          capture:
            - json: "$.success"
              as: "analysisSuccess"
            - json: "$.data.predictedArr"
              as: "predictedArr"
          expect:
            - statusCode: 200
            - hasProperty: "success"
      - think: 2
      
  - name: "Health Check"
    weight: 10
    flow:
      - get:
          url: "/api/health"
          expect:
            - statusCode: 200
            
  - name: "Funding Analysis"
    weight: 10
    flow:
      - post:
          url: "/api/analyze/funding"
          headers:
            Content-Type: "application/json"
          json:
            customerName: "Funding Test Customer {{ $randomString() }}"
            region: "us-east-1"
            closeDate: "2024-12-31"
            opportunityName: "Funding Test Opportunity"
            description: "Funding analysis load test"
            projectedArr: "$500,000"
            topServices: "EC2, S3, RDS"
          expect:
            - statusCode: [200, 404, 501]  # May not be implemented
      - think: 1